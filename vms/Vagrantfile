Vagrant.configure("2") do |config|
  # Set the name of the VM to REMnux
  config.vm.define "REMnux" do |remnux_config|
    # Use a generic Ubuntu 20.04 image for libvirt
    remnux_config.vm.box = "generic/ubuntu2004"

    # Set the provider to libvirt
    remnux_config.vm.provider "libvirt" do |libvirt|
      libvirt.driver = "kvm"
      libvirt.memory = 8192  # 8 GB of RAM
      libvirt.cpus = 2       # 2 CPU cores
    end

    # Combined shell tasks
    remnux_config.vm.provision "shell", inline: <<-SHELL
      sudo apt-get update
      sudo apt-get upgrade -y

      # Install gnome desktop environment
      sudo apt-get install -y gnome-core

      # Install VSCode
      sudo snap install --classic code

      # Add user remnux with password malware
      sudo useradd -m -p $(openssl passwd -1 malware) remnux

      # Install and enable qemu-guest-agent
      sudo apt-get install -y qemu-guest-agent
      sudo systemctl enable qemu-guest-agent
      sudo systemctl start qemu-guest-agent

      # Set locales
      sudo apt-get install -y language-pack-en
      sudo locale-gen en_US.UTF-8
      sudo update-locale LANG=en_US.UTF-8
      sudo dpkg-reconfigure --frontend noninteractive locales
      sudo -u remnux localectl set-x11-keymap ch
      sudo timedatectl set-timezone Europe/Zurich

      # Adjusted REMnux installation with the remnux user
      wget https://REMnux.org/remnux-cli
      if [ $(sha256sum remnux-cli | awk '{print $1}') = "88cd35b7807fc66ee8b51ee08d0d2518b2329c471b034ee3201e004c655be8d6" ]; then
        mv remnux-cli remnux
        chmod +x remnux
        sudo mv remnux /usr/local/bin
        sudo -u remnux remnux install
      else
        echo "Hashes do not match. Exiting."
      fi
    SHELL
  end
end
